# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/common_event_service/event.gni")
import("//build/test.gni")

module_output_path = "common_event_service/mouduletest"

ohos_moduletest("cesModuleTest") {
  module_out_path = module_output_path

  sources = [
    "${common_event_service_path}/test/mock/mock_access_token_helper.cpp",
    "${common_event_service_path}/test/mock/mock_bundle_manager.cpp",
    "${common_event_service_path}/test/mock/mock_ipc.cpp",
    "${common_event_service_path}/test/mock/mock_ipc_object_stub.cpp",
    "common_event_services_module_test.cpp",
  ]

  configs = [ "${common_event_service_path}/test/systemtest/common/ces:cesfwk_kits_test_config" ]

  include_dirs = [
    "${ability_runtime_inner_api_path}/ability_manager/include",
    "${ability_runtime_services_path}/abilitymgr/include/",
    "${ability_runtime_services_path}/common/include",
    "${services_path}/include",
    "${common_event_service_path}/test/mock/include",
    "//third_party/json/include",
    "${ffrt_path}/interfaces/kits",
  ]

  cflags = []

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ces_core_path}:cesfwk_core",
    "${ces_native_path}:cesfwk_innerkits",
    "${services_path}:cesfwk_services",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "ipc:libdbinder",
    "samgr:samgr_proxy",
  ]
}

group("moduletest_ces") {
  testonly = true

  deps = [ ":cesModuleTest" ]
}
